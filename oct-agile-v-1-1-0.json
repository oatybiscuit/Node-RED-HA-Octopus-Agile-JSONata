[{"id":"e42010beae8f7fa5","type":"group","z":"1e4d07ddcfdc2e9b","name":"Octopus Agile Prices","style":{"label":true,"stroke":"#6f2fa0","fill":"#dbcbe7","color":"#001f60"},"nodes":["2d59f743b9329794","b201872551160895","29dd2ea7557213cd","518fc65503bdfc82"],"x":48,"y":33,"w":1064,"h":1074},{"id":"2d59f743b9329794","type":"group","z":"1e4d07ddcfdc2e9b","g":"e42010beae8f7fa5","name":"Half-Hourly update for current price from array","style":{"label":true,"color":"#6f2fa0"},"nodes":["2bb43fc9797cb5b3","be04e63b7258b035","4430da6cfe290e39","3797b648d315c3a1","d8bb3057287698de","ee45b426f60a08a0","a9942de6076269cf","557a6128047a268e","da0c1b6c415c2734","38eb803a7413df2d","1ea33f6575c3a25e"],"x":74,"y":399,"w":1012,"h":182},{"id":"2bb43fc9797cb5b3","type":"debug","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"periods left","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"agile.periodsleft","targetType":"msg","statusVal":"agile.periodsleft","statusType":"auto","x":770,"y":440,"wires":[]},{"id":"be04e63b7258b035","type":"ha-sensor","z":"1e4d07ddcfdc2e9b","d":true,"g":"2d59f743b9329794","name":"Octopus Agile Prices","entityConfig":"0760bdebc1d4da3e","version":0,"state":"agile.now.from","stateType":"msg","attributes":[{"property":"array","value":"payload","valueType":"msg"},{"property":"import","value":"agile.now.import","valueType":"msg"},{"property":"export","value":"agile.now.export","valueType":"msg"},{"property":"import_next","value":"agile.next.import","valueType":"msg"},{"property":"export_next","value":"agile.next.export","valueType":"msg"},{"property":"periods_left","value":"agile.periodsleft","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":960,"y":480,"wires":[[]],"server":""},{"id":"4430da6cfe290e39","type":"change","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Value Now","rules":[{"t":"set","p":"agile","pt":"msg","to":"(\t/* Jan 25 - deal gracefully with failed array update when past the last array entry time */\t/*        - return 'now' and zero left in array, so user needs to add error message flag */\t\t/* FUNCTION: add <delta> minutes to now */\t   $tstep:=function($mdelta) {\t       $fromMillis($toMillis($now())+$mdelta*60000)\t   };\t\t/* FUNCTION: build key value from timestamp. Strip fraction */\t/*     of seconds, floor minutes to 00 or 30, zero seconds  */\t   $keyis:=function($ts) {(\t           $t:=$replace($ts, /(\\.[0-9]+)/, '');\t           $m:=$substring($t,-6,2).$number()<30 ? '00': '30';\t           $substring($t,0,14) & $m & \":00\" & $substring($t,-1);\t           )\t   };\t\t/* return object with 'now' and 'next' value objects    */\t/* set a default 'null return' in case run out of array */\t    $empty:={\t        \"import\": 0,\t        \"export\": 0,\t        \"from\": $now(),\t        \"upto\": $now() };\t    \t    $result:={\"now\": $empty, \"next\": $empty};\t    $p:=payload;\t    $keyNow:=$keyis($now());\t    $keyNext:=$keyis($tstep(30));\t\t    $result~>|$|{        \t       \"now\": $p[from=$keyNow],\t       \"next\": $p[from=$keyNext],\t       \"periodsleft\": $count($p[from>$keyNext])}|;\t\t)","tot":"jsonata"},{"t":"set","p":"payload","pt":"msg","to":"payload~>|$|{},[\"date\",\"localupto\",\"isofrom\", \"isoupto\"]|","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":570,"y":480,"wires":[["be04e63b7258b035","2bb43fc9797cb5b3","557a6128047a268e"]]},{"id":"3797b648d315c3a1","type":"change","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Read Array","rules":[{"t":"set","p":"payload","pt":"msg","to":"OctAgileTariff","tot":"flow","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":480,"wires":[["4430da6cfe290e39"]]},{"id":"d8bb3057287698de","type":"link in","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Daily","links":["56dd710454ea2e25"],"x":465,"y":440,"wires":[["4430da6cfe290e39"]]},{"id":"ee45b426f60a08a0","type":"inject","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"At Half Hour","props":[{"p":"payload"}],"repeat":"","crontab":"*/30 0-23 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":440,"wires":[["a9942de6076269cf"]]},{"id":"a9942de6076269cf","type":"delay","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"25s","pauseType":"delay","timeout":"25","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":190,"y":480,"wires":[["3797b648d315c3a1"]]},{"id":"557a6128047a268e","type":"switch","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Periods Left <10","property":"agile.periodsleft","propertyType":"msg","rules":[{"t":"lt","v":"10","vt":"num"}],"checkall":"false","repair":false,"outputs":1,"x":520,"y":540,"wires":[["1ea33f6575c3a25e"]]},{"id":"da0c1b6c415c2734","type":"link out","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Call Update","mode":"link","links":["32ae6a37829cd07f"],"x":1045,"y":540,"wires":[]},{"id":"38eb803a7413df2d","type":"delay","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"Once per hour - prevent looping","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"hour","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"allowrate":false,"outputs":1,"x":870,"y":540,"wires":[["da0c1b6c415c2734"]]},{"id":"1ea33f6575c3a25e","type":"change","z":"1e4d07ddcfdc2e9b","g":"2d59f743b9329794","name":"clear","rules":[{"t":"delete","p":"agile","pt":"msg"},{"t":"delete","p":"payload","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":670,"y":540,"wires":[["38eb803a7413df2d"]]},{"id":"0760bdebc1d4da3e","type":"ha-entity-config","d":true,"server":"","deviceConfig":"","name":"SC Oct Agile Prices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Octopus Agile Prices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":true,"debugEnabled":false},{"id":"b201872551160895","type":"group","z":"1e4d07ddcfdc2e9b","g":"e42010beae8f7fa5","name":"Read tariffs - build and save 2-day tariff array to context","style":{"label":true,"color":"#6f2fa0"},"nodes":["0ba1d9b378092267","56dd710454ea2e25","c3ffde5b136bf4bb","32ae6a37829cd07f","f0ed3ca0e333fb3c","926c3b4f4e106744","dfdc2c64d1b7411c","2a9483f862797d4d","b7acbc34062cd648","ea8bcf830bbbefd9","be5df95bbd69ec04","f9627be79419c6a3","89c324a7cae7d816","e9cd3d97cd2da9ab","99506edb06a8ffcb","a80e2ff73fb68402","218919e9e0d223ac","43dceed3774a3542","076db8db4aad1a08","f77b303ed7aa923d","6962616a08cd87be","79dba04bcb330388","477895e84b7d820f","41ea405e490cd682","e79a33ca9cb44edb","e8b1510efe0abf23","05bb8f17d80863fe","822ad045a251bfc6","fbfe936edc212e74","9fdede77aef7c136","0865109a86bcafaa","1d99582bb3075da7","3d97ee15b941809a"],"x":74,"y":59,"w":1012,"h":322},{"id":"0ba1d9b378092267","type":"inject","z":"1e4d07ddcfdc2e9b","d":true,"g":"b201872551160895","name":"@ 16:05","props":[{"p":"payload"}],"repeat":"","crontab":"05 16 * * *","once":true,"onceDelay":"2","topic":"","payload":"","payloadType":"date","x":180,"y":160,"wires":[["926c3b4f4e106744"]]},{"id":"56dd710454ea2e25","type":"link out","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Daily Update","mode":"link","links":["87bddd29d5e5ab90","d8bb3057287698de"],"x":855,"y":280,"wires":[]},{"id":"c3ffde5b136bf4bb","type":"comment","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Octopus Agile Prices v1.1.0 Jan 2025","info":"UPDATES:\n- Jun 24: remove need for Export call (further improved below)\n- Jan 25: set product & tariff as parameters, and call API to\n  check product end date. Provide product details in context,\n  with a warning if the tariff used is not the 'latest' one.\n  Improve update error checks, save details to context for debuging.\n  FIX: If the array runs to empty, return 'now' to price entity sensor\n","x":470,"y":100,"wires":[]},{"id":"32ae6a37829cd07f","type":"link in","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Call Update","links":["da0c1b6c415c2734"],"x":215,"y":200,"wires":[["926c3b4f4e106744"]]},{"id":"f0ed3ca0e333fb3c","type":"inject","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"At Start (20s)","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"20","topic":"","payload":"","payloadType":"date","x":200,"y":120,"wires":[["926c3b4f4e106744"]]},{"id":"926c3b4f4e106744","type":"junction","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","x":320,"y":160,"wires":[["2a9483f862797d4d"]]},{"id":"dfdc2c64d1b7411c","type":"http request","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"I-Product","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.octopus.energy/v1/products/{{{tariff.import.product}}}","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":320,"y":300,"wires":[["477895e84b7d820f"]]},{"id":"2a9483f862797d4d","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Tariff","rules":[{"t":"set","p":"tariff","pt":"msg","to":"{\"region\":\"L\",\"mode\":\"both\",\"import\":{\"product\":\"AGILE-24-10-01\",\"tariff\":\"E-1R-AGILE-24-10-01-L\"},\"export\":{\"product\":\"AGILE-OUTGOING-19-05-13\",\"tariff\":\"E-1R-AGILE-OUTGOING-19-05-13-L\"}}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":390,"y":160,"wires":[["b7acbc34062cd648"]]},{"id":"b7acbc34062cd648","type":"switch","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Mode","property":"tariff.mode","propertyType":"msg","rules":[{"t":"neq","v":"export","vt":"str"},{"t":"neq","v":"import","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":160,"wires":[["ea8bcf830bbbefd9"],["be5df95bbd69ec04"]]},{"id":"ea8bcf830bbbefd9","type":"http request","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Oct Import","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.octopus.energy/v1/products/{{{tariff.import.product}}}/electricity-tariffs/{{{tariff.import.tariff}}}/standard-unit-rates/?page_size=96","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":650,"y":140,"wires":[["89c324a7cae7d816"]]},{"id":"be5df95bbd69ec04","type":"http request","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Oct Export","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.octopus.energy/v1/products/{{{tariff.export.product}}}/electricity-tariffs/{{{tariff.export.tariff}}}/standard-unit-rates/?page_size=96","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":650,"y":180,"wires":[["e9cd3d97cd2da9ab"]]},{"id":"f9627be79419c6a3","type":"debug","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"CHECK","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"\"I-\" & payload.import & \" E-\" & payload.export","statusType":"jsonata","x":780,"y":220,"wires":[]},{"id":"89c324a7cae7d816","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Value","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t    $r:={\"status\": statusCode,\t    \"product\": $substringBefore($substringAfter(responseUrl, \"products/\"),\"/\"),\t    \"tariffs\": $substringBefore($substringAfter(responseUrl, \"tariffs/\"),\"/\"),\t    \"results\": $distinct(payload.results)};\t    \t    $xdate:=$r.results[0].valid_to;\t    $spans:=($toMillis($xdate) - $toMillis($r.results[-1].valid_from))/1800000;\t    $r~>|$|{\t        \"count\": $count(results),\t        \"spans\": $spans,\t        \"udate\": $xdate,\t        \"hours\": $floor(($toMillis($xdate)-$millis())/3600000)       \t        }|;\t\t)","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"import","tot":"str"},{"t":"delete","p":"headers","pt":"msg"},{"t":"delete","p":"responseUrl","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":790,"y":140,"wires":[["99506edb06a8ffcb"]]},{"id":"e9cd3d97cd2da9ab","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Value","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t    $r:={\"status\": statusCode,\t    \"product\": $substringBefore($substringAfter(responseUrl, \"products/\"),\"/\"),\t    \"tariffs\": $substringBefore($substringAfter(responseUrl, \"tariffs/\"),\"/\"),\t    \"results\": $distinct(payload.results)};\t    \t    $xdate:=$r.results[0].valid_to;\t    $spans:=($toMillis($xdate) - $toMillis($r.results[-1].valid_from))/1800000;\t    $r~>|$|{\t        \"count\": $count(results),\t        \"spans\": $spans,\t        \"udate\": $xdate,\t        \"hours\": $floor(($toMillis($xdate)-$millis())/3600000)       \t        }|;\t\t)","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"export","tot":"str"},{"t":"delete","p":"headers","pt":"msg"},{"t":"delete","p":"responseUrl","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":790,"y":180,"wires":[["99506edb06a8ffcb"]]},{"id":"99506edb06a8ffcb","type":"join","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Add (10s)","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"10","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":940,"y":160,"wires":[["0865109a86bcafaa"]]},{"id":"a80e2ff73fb68402","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"UK DST","rules":[{"t":"set","p":"dst","pt":"msg","to":"OctDST","tot":"flow","dc":true},{"t":"set","p":"dst","pt":"msg","to":"(\t/* Jan 2024: For UK only - calculate DST dates (GMT->BST, BST->GMT) */\t/*           fix bug for new year change, return day of week        */\t\t/*  $now() is evaluated once only and used throughout the expression */\t    $nw:=$now();\t\t/* FUNCTION: return day of week (DOW) given 'yyyy-mm-dd' where SUN=0 */\t    $dayofweek:=function($date) {(\t        $y:=$number($substring($date,0,4));\t        $m:=$number($substring($date,5,2));\t        $d:=$number($substring($date,8,2));\t        $m<3 ? $y:=$y-1;\t        $t:=[0,3,2,5,0,3,5,1,4,6,2,4];\t        ($y + $floor($y/4) - $floor($y/100) + $floor($y/400) + $t[$m-1] +$d)%7;\t    )};\t\t/* FUNCTION: returm start and end DST timestamps for a given year yyyy (int) */\t    $dstdates:=function($year) {(\t        $mar:=$year & \"-03-\";\t        $oct:=$year & \"-10-\";\t        $dstrt:=$mar & (31-$dayofweek($mar & \"31\")  & \"T01:00:00.000Z\");\t        $dstop:=$oct & (31-$dayofweek($oct & \"31\")  & \"T01:00:00.000Z\");\t        $a:=$toMillis($dstrt);\t        $b:=$toMillis($dstop);\t        $n:=$toMillis($nw);\t        $mp:=($a+$b)/2;\t\t        {\"year\": $year,\t        \"timestamp\": $nw,\t        \"now\": $n,\t        \"doweek\": $dayofweek($nw),\t        \"DSTstart\": $dstrt,\t        \"on\": $a,\t        \"DSTstop\":  $dstop,\t        \"off\": $b,\t        \"DSToffset\": (1*60*60*1000),\t        \"midpoint\": $mp\t        }\t    )};\t\t/* read in from context - if does not exist or if year has changed, update */\t    $yearis:=$number($substringBefore($nw,\"-\"));\t    $dst:= $exists(dst) ? dst : $dstdates($yearis);\t    $dst:= $dst.year=$yearis ? $dst : $dstdates($yearis);\t\t/* update 'now' in record and decide if DST (GMT/BST), if 'close' to change */\t/* note which way it went/will go, and which timestamp to test against      */\t\t    $n:=$toMillis($nw);\t    $a:=$dst.on;\t    $b:=$dst.off;\t    $mp:=$dst.midpoint;\t\t    $tz:= $n<$a or $n>=$b ? \"GMT\" : \"BST\";\t    $close:=$min([$abs($n-$a), $abs($n-$b)])/3600000<=48;    /* test for 48 hours either side */\t    $GMTBST:=$n<$mp;\t\t    $tzfrom:= $close ? ($GMTBST ? \"GMT\" : \"BST\" ) : $tz;\t    $tzgoto:= $close ? ($GMTBST ? \"BST\" : \"GMT\" ) : $tz;\t\t    $update:={\t        \"timestamp\": $nw,\t        \"now\": $n,\t        \"doweek\": $dayofweek($nw),\t        \"TZnow\": $tz,\t        \"DSTon\": $tz=\"BST\",        \t        \"changing\": $close,\t        \"toDST\": $GMTBST,\t        \"TZfrom\": $tzfrom,\t        \"TZtobe\": $tzgoto,\t        \"testvalue\": $GMTBST ? $a:$b\t    };\t    $dst ~> | $ | $update |\t\t)","tot":"jsonata"},{"t":"set","p":"OctDST","pt":"flow","to":"dst","tot":"msg","dc":true},{"t":"set","p":"products","pt":"msg","to":"OctProducts","tot":"flow","dc":true},{"t":"set","p":"arrayend","pt":"msg","to":"(\t    /* look into existing context array and check how many hours are left */\t    $arrayends:=$flowContext(\"OctAgileTariff\")[-1].upto;\t    $exists($arrayends) ? $floor(($toMillis($arrayends)-$millis())/3600000) : 0;\t)\t","tot":"jsonata","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":220,"wires":[["218919e9e0d223ac"]]},{"id":"218919e9e0d223ac","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Prices - save UPDATE","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t/* create a merged array of import & export tariffs for each time period */\t/* use DST switching timestamps to also create 'local time' and DST flag */\t\t/* Jan 2025 - Import & Export are optional, set either value to '0' if not requested */\t/*          - expects 96 half-hour slots, will check each return but cannot recover  */\t/*          - cope better with update if eg import prices updated but export not yet */\t\t\t/* FUNCTION: extract date and time from ISO timestamp, first applying offset */\t    $parsets:=function($timestamp){(\t        $msec:=$toMillis($timestamp);\t        $utcdate:=$substringBefore($timestamp,\"T\");\t        $utctime:=$substringAfter($timestamp,\"T\");\t\t        $tz:= $changing ? ($msec<$test ? $tzfrom : $tznext) : $tzfrom;\t        $add:= $tz=\"GMT\" ? 0 : $offset;\t        $iso:= $tz=\"GMT\" ? \"+00:00\" : \"+01:00\";\t\t        $local:=$fromMillis($msec+$add);\t        $localdate:=$substringBefore($local,\"T\");\t        $localtime:=$substringAfter($local,\"T\");\t        $isotime:=$substring($localtime,0,11);\t        {\"millisec\": $msec,\t        \"utcdate\": $utcdate,\t        \"utctime\": $substring($utctime,0,5),\t        \"timezone\": $tz,\t        \"localdate\": $localdate,\t        \"localtime\": $substring($localtime,0,5),\t        \"localiso\": $localdate & \"T\" & $isotime & $iso\t        }\t\t    )};\t\t    $changing:=dst.changing;\t    $fromGMT:=dst.toDST;   \t    $tzfrom:= dst.TZfrom;\t    $tznext:= dst.TZtobe;\t    $test:= dst.testvalue;\t    $offset:=dst.DSToffset;\t\t    $import:=payload.import;\t    $export:=payload.export;\t    $mode:=tariff.mode;\t\t    $arrayends:= $exists(arrayend) ? arrayend : 0;\t\t/* for import/export, test 1.requested, 2.exists, 3.=48 hours, and 4.updated    */\t/* '--' = not requested                                                         */\t/* 'ER' = does not exist, not 96 items, not 48 hours from start to finish       */\t/* 'MT' = has not yet been updated, last entry should be into tomorrow          */\t/* 'OK' = correct - will only update the array if one/both either '--' or 'OK'  */\t\t    $impis:=$mode=\"export\" ? \"--\" : $not($exists($import) and $import.count=96 and $import.spans=96) ? \"ER\" : $import.hours<12 and $import.hours = $arrayends ? \"MT\" : \"OK\";\t    $expis:=$mode=\"import\" ? \"--\" : $not($exists($export) and $export.count=96 and $export.spans=96) ? \"ER\" : $export.hours<12 and $export.hours = $arrayends ? \"MT\" : \"OK\";\t    $iudate:=$import.udate;\t    $eudate:=$export.udate;    \t    $match:=$not($exists($import) and $exists($export) and $iudate!=$eudate);\t    $success:=$not(\"ER\" in [$impis, $expis] or \"MT\" in [$impis, $expis]);\t\t/* create an array of 96 merged prices, unrequested, missing or invalid arrays replaced with zeros */\t\t    $ai:= $impis=\"OK\" ? $import.results.{\"import\": value_inc_vat, \"export\": 0, \"from\": valid_from, \"upto\": valid_to} : [1..96].{\"import\": 0};\t    $ae:= $expis=\"OK\" ? $export.results.{\"export\": value_inc_vat, \"from\": valid_from, \"upto\": valid_to} : [1..96].{\"export\": 0};\t\t    $array:=$zip($ai, $ae).($merge($))^(from);\t\t/* add in the local date & time */\t\t    $array:=$array ~> |*|(\t        $from:=$parsets(from);\t        $upto:=$parsets(upto);       \t        {\"date\":$from.utcdate,\t         \"timefrom\": $from.utctime,\t         \"timeupto\": $upto.utctime,\t         \"localdate\": $from.localdate,\t         \"localfrom\": $from.localtime & \" \" & $from.timezone,\t         \"localupto\": $upto.localtime & \" \" & $upto.timezone,\t         \"dstchange\": $from.timezone != $upto.timezone,\t         \"isofrom\": $from.localiso,\t         \"isoupto\": $upto.localiso} )|;\t\t/* check product used against the latest list */\t    $pstatus:=function($mode){(\t        $exists($mode.product) ? $mode.product in products.latest.code ? \"latest\" : \"not the latest product\" : \"----\"\t    )};\t\t    {\"update\": $now(),\t     \"import\": $impis,\t     \"export\": $expis,\t     \"match\": $match,\t     \"success\": $success,\t     \"afrom\": $array[0].from,\t     \"aupto\": $array[-1].upto,\t     \"iupto\": $iudate,\t     \"eupto\": $eudate,\t     \"aleft\": $arrayends,     \t     \"hours\": $max([$import.hours, $export.hours]),\t     \"hleft\": $min([$import.hours, $export.hours]),\t     \"iprod\": $pstatus($import),\t     \"eprod\": $pstatus($export),\t     \"array\": $array};\t\t\t)","tot":"jsonata"},{"t":"set","p":"OctUpdate","pt":"flow","to":"payload~>|$|{}, ['array']|","tot":"jsonata","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":500,"y":220,"wires":[["f9627be79419c6a3","43dceed3774a3542","41ea405e490cd682","3d97ee15b941809a"]]},{"id":"43dceed3774a3542","type":"switch","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Weekly","property":"tariff","propertyType":"msg","rules":[{"t":"jsonata_exp","v":"/* update on a sunday - day of week =0 */\t$not($exists(products)) or dst.doweek=0","vt":"jsonata"}],"checkall":"true","repair":false,"outputs":1,"x":180,"y":260,"wires":[["076db8db4aad1a08"]]},{"id":"076db8db4aad1a08","type":"http request","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"All Agile","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.octopus.energy/v1/products/?is_variable=true","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":320,"y":260,"wires":[["f77b303ed7aa923d"]]},{"id":"f77b303ed7aa923d","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"List","rules":[{"t":"set","p":"current","pt":"msg","to":"(\t    payload.results[$contains(code, \"AGILE\")].(\t        {\"mode\": direction,\t        \"code\": code,\t        \"term\": term,\t        \"brand\": brand,\t        \"from\": available_from,\t        \"upto\": available_to,\t        \"link\": links.href} );\t        \t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":260,"wires":[["6962616a08cd87be"]]},{"id":"6962616a08cd87be","type":"switch","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Mode","property":"tariff.mode","propertyType":"msg","rules":[{"t":"neq","v":"export","vt":"str"},{"t":"neq","v":"import","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":170,"y":320,"wires":[["dfdc2c64d1b7411c"],["79dba04bcb330388"]]},{"id":"79dba04bcb330388","type":"http request","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"E-Product","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.octopus.energy/v1/products/{{{tariff.export.product}}}","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":320,"y":340,"wires":[["e79a33ca9cb44edb"]]},{"id":"477895e84b7d820f","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Info","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t\t    $region:=tariff.region;\t    $p:=payload;\t    $r:=$p.single_register_electricity_tariffs;\t    $d:=$lookup($r, \"_\" & $region).direct_debit_monthly;\t\t    $end:=$p.available_to;\t    $end:= $end = null ? \"no-end\" : $toMillis($end)-$millis() > 0 ? \"sunset\" : \"closed\";\t\t    {\"code\": $p.code,\t     \"name\": $p.full_name,\t     \"term\": $p.term,\t     \"from\": $p.available_from,\t     \"upto\": $p.available_to,\t     \"sale\": $end,\t     \"brand\": $p.brand,\t     \"region\": $region,\t     \"list\": $keys($r).$replace(\"_\",\"\")~>$join(\",\"),\t     \"rcode\": $d.code,\t     \"standing\": $d.standing_charge_inc_vat,\t     \"unitrate\": $d.standard_unit_rate_inc_vat\t    };\t\t)","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"import","tot":"str"},{"t":"delete","p":"headers","pt":"msg"},{"t":"delete","p":"responseUrl","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":300,"wires":[["e8b1510efe0abf23"]]},{"id":"41ea405e490cd682","type":"debug","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Array Update Ends","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"$exists(payload.aupto) ? payload.aupto : \"no array update\"","statusType":"jsonata","x":950,"y":220,"wires":[]},{"id":"e79a33ca9cb44edb","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Info","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t\t    $region:=tariff.region;\t    $p:=payload;\t    $r:=$p.single_register_electricity_tariffs;\t    $d:=$lookup($r, \"_\" & $region).direct_debit_monthly;\t\t    $end:=$p.available_to;\t    $end:= $end = null ? \"no-end\" : $toMillis($end)-$millis() > 0 ? \"sunset\" : \"closed\";\t\t    {\"code\": $p.code,\t     \"name\": $p.full_name,\t     \"term\": $p.term,\t     \"from\": $p.available_from,\t     \"upto\": $p.available_to,\t     \"sale\": $end,\t     \"brand\": $p.brand,\t     \"region\": $region,\t     \"list\": $keys($r).$replace(\"_\",\"\")~>$join(\",\"),\t     \"rcode\": $d.code,\t     \"standing\": $d.standing_charge_inc_vat,\t     \"unitrate\": $d.standard_unit_rate_inc_vat\t    };\t\t)","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"export","tot":"str"},{"t":"delete","p":"headers","pt":"msg"},{"t":"delete","p":"responseUrl","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":340,"wires":[["e8b1510efe0abf23"]]},{"id":"e8b1510efe0abf23","type":"join","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Add (5s)","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"5","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":600,"y":340,"wires":[["05bb8f17d80863fe"]]},{"id":"05bb8f17d80863fe","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Write PRODUCTS","rules":[{"t":"set","p":"OctProducts","pt":"flow","to":"{\"updated\": $now(),\t \"import\": payload.import,\t \"export\": payload.export,\t \"latest\": current}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":340,"wires":[["822ad045a251bfc6","fbfe936edc212e74"]]},{"id":"822ad045a251bfc6","type":"debug","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Imp product","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"payload.import.sale","statusType":"msg","x":970,"y":280,"wires":[]},{"id":"fbfe936edc212e74","type":"debug","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Exp Product","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"payload.export.sale","statusType":"msg","x":970,"y":340,"wires":[]},{"id":"9fdede77aef7c136","type":"change","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"ARRAY","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.array","tot":"msg","dc":true},{"t":"set","p":"OctAgileTariff","pt":"flow","to":"payload","tot":"msg","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":760,"y":280,"wires":[["56dd710454ea2e25"]]},{"id":"0865109a86bcafaa","type":"link out","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"process API","mode":"link","links":["1d99582bb3075da7"],"x":1045,"y":160,"wires":[]},{"id":"1d99582bb3075da7","type":"link in","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"process API","links":["0865109a86bcafaa"],"x":165,"y":220,"wires":[["a80e2ff73fb68402"]]},{"id":"3d97ee15b941809a","type":"switch","z":"1e4d07ddcfdc2e9b","g":"b201872551160895","name":"Write","property":"payload.success","propertyType":"msg","rules":[{"t":"true"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":630,"y":280,"wires":[["9fdede77aef7c136"],[]]},{"id":"29dd2ea7557213cd","type":"group","z":"1e4d07ddcfdc2e9b","g":"e42010beae8f7fa5","name":"Binary sensor - create and manage dynamic switching schedules","style":{"label":true,"color":"#6f2fa0"},"nodes":["3ba57f3b89f9766f","22d6194ce87d6071","6b85072564ab77f1","2842cbd7a62bdec3","6059b908602e5c74","a2da777d6df94115","6d225d4efd80e737","decefda660d240ee","f8ca783a52eb32d8","3d951d153239eb27","315b3d2dda9301bb","7e69c69041f64555","ed031a2fcc75c493","c284862b7284bd1d","10cb994c44d0f0de","0f2eed13f4a8fd7e","45b336c245c0c32f","c3990bf24fabec27","a4572a5e5aeda036","f7cbd2e4b217f3f1","dae9895b170ecb41","fc1bbbe76ab45649"],"x":74,"y":799,"w":1012,"h":282},{"id":"3ba57f3b89f9766f","type":"inject","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Manual OFF","props":[{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"40","topic":"OFF","x":670,"y":1020,"wires":[["45b336c245c0c32f"]]},{"id":"22d6194ce87d6071","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Clear Old Inactive Schedules first","rules":[{"t":"set","p":"topic","pt":"msg","to":"remove-inactive","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":840,"wires":[["0f2eed13f4a8fd7e"]]},{"id":"6b85072564ab77f1","type":"delay","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":230,"y":880,"wires":[["2842cbd7a62bdec3"]]},{"id":"2842cbd7a62bdec3","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Binary Schedules","rules":[{"t":"set","p":"topic","pt":"msg","to":"\"\"","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"payload.import","tot":"msg"},{"t":"set","p":"periods","pt":"msg","to":"10","tot":"num"},{"t":"set","p":"adjust","pt":"msg","to":"25","tot":"num"},{"t":"set","p":"uselocal","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"(\t/* FUNCTION: turn timestring into cron expression for schedule */\t    $cronexp:=function($input, $add){(\t        $tz:= $contains($input, \"Z\") ? \"+0000\" : \"+\" & $substringBefore($substringAfter($input,\"+\"),\":\") & \"00\";\t        $ms:=$toMillis($input)+$add;\t        $ts:=$fromMillis($ms,'[s] [m] [H01] [D01] [M01] * 20[Y02]',$tz)\t    )};\t\t/* FUNCTION: get duration in minutes between on and off times */\t    $dur:=function($on, $off){$round(($toMillis($off)-$toMillis($on))/60000,0)};\t\t/* FUNCTION: build CronPlus command from parameters */\t    $cpcom:= function($ind, $switch, $ton, $toff, $vlist, $ymd, $dst){(\t        $totval:=$sum($vlist);\t        $numval:=$count($vlist);\t        {\"command\": \"add\",\t        \"name\": \"OctopusAgile \" & $ymd & \" \" & $switch & \" \" & $ind,\t        \"topic\": $switch,\t        \"expression\": $cronexp($switch=\"ON\" ? $ton : $toff, $switch=\"ON\" ? $adjust : -$adjust),\t        \"limit\": 1,\t        \"expressiontype\": \"cron\",\t        \"payloadType\": \"json\",\t        \"payload\": {\t            \"switch\": $switch,\t            \"event\": $ymd & \"-\" & $ind & \"/\" & $list & \"=\" & $switch,\t            \"timeon\": $ton,\t            \"timeoff\": $toff,\t            \"duration\": $dur($ton, $toff),\t            \"average\": $round($totval/$numval, 3),\t            \"local\": $uselocal,\t            \"dstchange\": $dst}}\t    )};\t\t/* PARAMETERS */\t\t/* the 'adjust' is used to add to ON time and subtract from OFF time by <n> [0-60] seconds */\t    $a:=$exists(adjust) ? adjust : 0;\t    $adjust:=$a>=0 and $a<=60 ? $a*1000 : 0;\t\t/* pick <n> by value then re-sort back into time order */\t    $pick:= $exists(periods) ? periods : $count(payload);\t    $best:=payload^(value)[[0..$pick-1]];\t    $bestbunch:=$best^(from);\t\t/* uselocal: use local time (ie BST in summer) as default otherwise use UTC time */\t/* note that 'cronplus' node requires a UTC+00:00 and DST: 0 timezone for UTC    */\t    $uselocal:= $exists(uselocal) ? uselocal : true;\t\t/* MAIN */\t\t/* get NEW sequence position for subset of 'best' periods & reorder index for these */\t    $bestbunch:=$bestbunch#$v.(\t        $last:=$v<1 ? false : from=$bestbunch[$v-1].upto;\t        $next:=upto=$bestbunch[$v+1].from;\t        $position:=($last ? ($next ? \"middle\" : \"end\") : ($next ? \"start\" : \"only\"));\t        $~>|$|{\"index\": $v,\"position\": $position}, [\"link_last\", \"link_next\"]|;\t    );\t\t/* get an array of start-end indexes and compact consecutive runs */\t    $chain:=$zip($bestbunch[position=\"start\" or position=\"only\"].index, $bestbunch[position=\"end\" or position=\"only\"].index);\t    $list:=$count($chain);\t\t    $result:=$chain#$i.(\t        $ion:=$[0];\t        $recon:=$bestbunch[$ion];\t        $timeon:=$lookup($recon, $uselocal ? \"isofrom\" : \"from\");\t        $ioff:=$[1];\t        $recoff:=$bestbunch[$ioff];\t        $timeoff:=$lookup($recoff, $uselocal ? \"isoupto\" : \"upto\");\t        $vallist:=($bestbunch[[$ion..$ioff]].value);\t    \t        $on:= $cpcom($i+1, \"ON\",  $timeon, $timeoff, $vallist, $recon.ymd, $recon.dstchange);\t        $of:= $cpcom($i+1, \"OFF\", $timeon, $timeoff, $vallist, $recoff.ymd, $recoff.dstchange);\t        $append($on, $of);\t \t    );\t\t    $result:=$result[payload.dstchange=false];   /* ignore switches over DST changes */\t\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":390,"y":880,"wires":[["0f2eed13f4a8fd7e"]]},{"id":"6059b908602e5c74","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Read Schedules","rules":[{"t":"set","p":"topic","pt":"msg","to":"status-all","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":400,"y":960,"wires":[["0f2eed13f4a8fd7e"]]},{"id":"a2da777d6df94115","type":"delay","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"7s","pauseType":"delay","timeout":"7","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":250,"y":960,"wires":[["6059b908602e5c74"]]},{"id":"6d225d4efd80e737","type":"cronplus","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Schedules","outputField":"payload","timeZone":"","storeName":"file","commandResponseMsgOutput":"output2","defaultLocation":"","defaultLocationType":"default","outputs":2,"options":[],"x":630,"y":920,"wires":[["f7cbd2e4b217f3f1"],["ed031a2fcc75c493"]]},{"id":"decefda660d240ee","type":"inject","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Clear","props":[{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"remove-inactive","x":290,"y":920,"wires":[["0f2eed13f4a8fd7e"]]},{"id":"f8ca783a52eb32d8","type":"inject","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Manual ON","props":[{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"ON","x":670,"y":980,"wires":[["45b336c245c0c32f"]]},{"id":"3d951d153239eb27","type":"comment","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Binary Sensor - read me","info":"Uses the lowest 'import' prices\nSelects <n> from 'best list', eg set to 8\n  for 4 hours of lowest import.\nAdjust is seconds delay (on) or advance (off)\n  to avoid switching 'on the hour'\nUses 'cronplus' node, with dynamic schedules\n  added from payload. Set 'Persist dynamic'\n  to automatically save these to file and\n  recover over NR restarts\n\nDST: will determine the start/end UTC timestamp\n  for DST as GMT->BST and BST->GMT. Includes\n  both UTC time and local time in arrays.\n\n  For the binary sensor schedules, the 'cronplus'\n  node uses the machine local timezone setting,\n  so has to be provided with local not UTC times.\n\n  To use UTC times, set the cronplus node timezone\n  to a location with settings UTC+0 and DST:0\n\n  To use local time, set the timezone to blank.\n  ** IF USING LOCAL time ** note that HA must also\n  change over at 01:00 UTC.\n\n  ** NB ** To avoid issues, any switching period\n  that spans a DST changeover will be supressed\n  and ignored. The 'dstchange' field is true for\n  periods that include mixed timezones at start\n  and end. Also, the 'changing' field in OctDST\n  will be true when a DST change time 01:00 UTC\n  is within 48 hours of the tariff update (16:00)\n  and this could be used to further surpress\n  automations around the DST changeover day.\n\n\n","x":750,"y":840,"wires":[]},{"id":"315b3d2dda9301bb","type":"link in","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Binary","links":["8bf35a995b07e7c0"],"x":115,"y":880,"wires":[["22d6194ce87d6071","6b85072564ab77f1","a2da777d6df94115"]]},{"id":"7e69c69041f64555","type":"inject","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Read","props":[{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"status-all","x":430,"y":920,"wires":[["0f2eed13f4a8fd7e"]]},{"id":"ed031a2fcc75c493","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Save BINARY SCHEDULES","rules":[{"t":"set","p":"schedules","pt":"msg","to":"payload.result","tot":"msg","dc":true},{"t":"set","p":"OctAgileInBin","pt":"flow","to":"schedules","tot":"msg","dc":true},{"t":"set","p":"payload","pt":"msg","to":"new","tot":"str"},{"t":"set","p":"topic","pt":"msg","to":"NEW","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":880,"y":920,"wires":[["c3990bf24fabec27"]]},{"id":"c284862b7284bd1d","type":"ha-binary-sensor","z":"1e4d07ddcfdc2e9b","d":true,"g":"29dd2ea7557213cd","name":"Octopus Agile Import Binary","entityConfig":"2a3c27e29918c767","version":0,"state":"topic=\"ON\"","stateType":"jsonata","attributes":[{"property":"event","value":"$exists(payload.event) ? $substringBefore(payload.event,\"=\") : \"-\"","valueType":"jsonata"},{"property":"timeOn","value":"$exists(payload.timeon) ? payload.timeon: 0","valueType":"jsonata"},{"property":"timeOff","value":"$exists(payload.timeoff) ? payload.timeoff : 0","valueType":"jsonata"},{"property":"duration","value":"$exists(payload.duration) ? payload.duration: 0","valueType":"jsonata"},{"property":"average","value":"$exists(payload.average) ? payload.average : 0","valueType":"jsonata"},{"property":"array","value":"$exists(payload.array) ? payload.array : []","valueType":"jsonata"}],"inputOverride":"block","outputProperties":[],"x":940,"y":1040,"wires":[[]],"server":""},{"id":"10cb994c44d0f0de","type":"inject","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Manual","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"MAN","payload":"manual","payloadType":"str","x":650,"y":880,"wires":[["f7cbd2e4b217f3f1"]]},{"id":"0f2eed13f4a8fd7e","type":"junction","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","x":540,"y":920,"wires":[["6d225d4efd80e737"]]},{"id":"45b336c245c0c32f","type":"junction","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","x":780,"y":1040,"wires":[["c284862b7284bd1d"]]},{"id":"c3990bf24fabec27","type":"link out","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Scheduled event","mode":"link","links":["a4572a5e5aeda036"],"x":1045,"y":880,"wires":[]},{"id":"a4572a5e5aeda036","type":"link in","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Scheduled event","links":["c3990bf24fabec27"],"x":125,"y":1040,"wires":[["dae9895b170ecb41"]]},{"id":"f7cbd2e4b217f3f1","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Read Schedules","rules":[{"t":"set","p":"schedules","pt":"msg","to":"OctAgileInBin","tot":"flow","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":880,"wires":[["c3990bf24fabec27"]]},{"id":"dae9895b170ecb41","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Get Schedule Array","rules":[{"t":"set","p":"schedules","pt":"msg","to":"(\t/* from schedule read, get done and next */\t/* find the last and the next commands   */\t    \t    $x:=schedules;\t    $xdone:=$x[config.isRunning=false];\t    $xtogo:=$x[config.isRunning];\t    $xlast:=$xdone[-1];\t    $xnext:=$xtogo[0];\t    \t    $array:=$x.(\t        $c:=config;\t        $s:=status;\t        $p:=config.payload;\t        {\t        \"switch\": $c.topic,\t        \"name\": $c.name,\t        \"active\": $s.isRunning,\t        \"event\": $p.event,\t        \"timeon\": $p.timeon,\t        \"timeoff\": $p.timeoff,\t        \"duration\": $p.duration,\t        \"average\": $p.average,\t        \"description\": $s.nextDescription,\t        \"UTC\": $s.nextDate,\t        \"local\": $s.nextDateTZ\t        });\t    $array:=$array[switch=\"ON\"];\t\t    {\"last\": $xlast.config.payload,\t     \"next\": $xnext.config.payload,\t     \"array\": $array}\t\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":250,"y":1040,"wires":[["fc1bbbe76ab45649"]]},{"id":"fc1bbbe76ab45649","type":"change","z":"1e4d07ddcfdc2e9b","g":"29dd2ea7557213cd","name":"Build message","rules":[{"t":"set","p":"result","pt":"msg","to":"(\t/* if fired by schedule: the topic and payload will already be given */\t/* if manual or update:  if a 'last' event exists, lift and use that */\t/* if NR flow restart:   if no 'last, 'next' exists and is \"off\" and */\t/*  now' between next on & off times, use next event changed to \"ON\" */\t/* otherwise set to \"OFF\", and in all cases, patch in schedule array */\t\t    $array:=schedules.array;\t    $action:=$type(payload)=\"string\" ? payload : \"schedule\";\t\t    $next:= $exists(schedules.next) ? schedules.next : {};\t    $isON:= $next.timeon~>$toMillis()<=$millis() and $next.timeoff~>$toMillis()>$millis() and $next.switch=\"OFF\";\t    $islast:= $exists(schedules.last);\t    $last:= $islast ? schedules.last : {\"event\": \"=OFF\"};\t    $not($islast) and $isON ? $last:= $next~>|$|{\"switch\": \"ON\", \"event\": $replace(event, \"OFF\", \"ON\")}|;\t\t    $topic:=topic in [\"ON\", \"OFF\"] ? topic : $substringAfter($last.event, \"=\");\t    $pload:= $type(payload)=\"object\" ? payload : $last;\t    \t    $pload:= $pload~>|$|{\"array\": $array}|;\t    \t    {\"topic\": $topic,\t    \"action\": $action,\t    \"isOn\": $isON,\t    \"last\": $islast,\t    \"payload\": $pload\t    }\t\t)","tot":"jsonata"},{"t":"set","p":"payload","pt":"msg","to":"result.payload","tot":"msg","dc":true},{"t":"set","p":"topic","pt":"msg","to":"result.topic","tot":"msg","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":1040,"wires":[["45b336c245c0c32f"]]},{"id":"2a3c27e29918c767","type":"ha-entity-config","d":true,"server":"","deviceConfig":"","name":"SC Oct Agile Imp Bin","version":"6","entityType":"binary_sensor","haConfig":[{"property":"name","value":"Octopus Agile Import Binary"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":true,"debugEnabled":false},{"id":"518fc65503bdfc82","type":"group","z":"1e4d07ddcfdc2e9b","g":"e42010beae8f7fa5","name":"Caclulate and save best times and contiguous periods","style":{"label":true,"color":"#6f2fa0"},"nodes":["7b2bfeb83135f71f","b98e955f8996efa2","c63c0e9f64999a1e","87bddd29d5e5ab90","339092c8ec953466","f78827da9d61cc5c","af230b1ce1f0097f","9d5af052c0da6b34","8ad658e6e88a7da9","115ae37f9df88633","9f49cf24a9de3b53","0b2baaea3d361864","1a455554a27f0b90","8bf35a995b07e7c0","70d7bd0a4d244b4c","5fd6c5257050028c"],"x":74,"y":599,"w":1012,"h":182},{"id":"7b2bfeb83135f71f","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Import Low","rules":[{"t":"set","p":"topic","pt":"msg","to":"import","tot":"str"},{"t":"set","p":"sample","pt":"msg","to":"15","tot":"num"},{"t":"set","p":"payload","pt":"msg","to":"/* look at latest prices, sorted by ascending import cost, pick the lowest */\t/* <sample size>, set value to import and remove the import/export fields  */\t\t(\t    $ymd:=$replace(payload[-1].date,\"-\",\"\");\t    $array:=payload[[48..95]]^(import)[[0..$$.sample-1]];\t    $array:=$array~> |$| {\"value\": import, \"ymd\": $ymd}, [\"import\", \"export\"]|;\t    $array^(from)\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":640,"wires":[["f78827da9d61cc5c"]]},{"id":"b98e955f8996efa2","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Read Array","rules":[{"t":"set","p":"payload","pt":"msg","to":"OctAgileTariff","tot":"flow","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":250,"y":680,"wires":[["5fd6c5257050028c"]]},{"id":"c63c0e9f64999a1e","type":"inject","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Manual","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":170,"y":640,"wires":[["b98e955f8996efa2"]]},{"id":"87bddd29d5e5ab90","type":"link in","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Daily","links":["56dd710454ea2e25"],"x":305,"y":640,"wires":[["5fd6c5257050028c"]]},{"id":"339092c8ec953466","type":"ha-sensor","z":"1e4d07ddcfdc2e9b","d":true,"g":"518fc65503bdfc82","name":"Octopus Agile Sequences","entityConfig":"6f8158bd34274dd3","version":0,"state":"(\t    $next:=payload.next;\t    $count(payload.export[ymd=$next]) + $count(payload.import[ymd=$next]); )","stateType":"jsonata","attributes":[{"property":"export_array","value":"payload.export","valueType":"msg"},{"property":"import_array","value":"payload.import","valueType":"msg"},{"property":"both_array","value":"payload.both","valueType":"msg"},{"property":"bid_offer_spread","value":"(\t    $next:=payload.next;\t    $min(payload.import[ymd=$next].average)-$max(payload.export[ymd=$next].average); )","valueType":"jsonata"},{"property":"block_today","value":"payload.today","valueType":"msg"},{"property":"block_next","value":"payload.next","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":950,"y":740,"wires":[[]],"server":""},{"id":"f78827da9d61cc5c","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Sequence","rules":[{"t":"set","p":"payload","pt":"msg","to":"/* note index position, and test if items  */\t/* are consecutive - forwards and backwards */\t/* set position as only, start, mid, end */\t\tpayload#$v.(\t   $last:=$v<1 ? false : from=%.payload[$v-1].upto;\t   $next:=upto=%.payload[$v+1].from;\t   $position:=(\t       $last ? ($next ? \"middle\" : \"end\") : ($next ? \"start\" : \"only\")\t   );\t    $~>|$|{\"index\": $v, \"link_last\": $last, \"link_next\": $next, \"position\": $position}|\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":620,"y":660,"wires":[["9d5af052c0da6b34","8ad658e6e88a7da9"]]},{"id":"af230b1ce1f0097f","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Save BEST","rules":[{"t":"set","p":"OctAgileBest","pt":"flow","to":"payload","tot":"msg","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":930,"y":660,"wires":[["8bf35a995b07e7c0"]]},{"id":"9d5af052c0da6b34","type":"join","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Join","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":770,"y":660,"wires":[["af230b1ce1f0097f"]]},{"id":"8ad658e6e88a7da9","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Groups","rules":[{"t":"set","p":"payload","pt":"msg","to":"/* get start and end indexes, and zip into a sequence array of [start, end]                */\t/* map this array of sequences to an array of objects, one for each sequence to include    */\t/* sequence number, index range, date, start time, stop time, count of half-hours          */\t/* duration, and average (sum of values in sequence divided by count of items in sequence) */\t\t(\t   $chain:=$zip(payload[position=\"start\"].index, payload[position=\"end\"].index);\t   $array:=$map($chain, function($item, $index) {\t       (\t        $aa:=payload[$a:=$item[0]];\t        $bb:=payload[$b:=$item[1]];\t        $count:=$b-$a+1;\t        {\t        \"mode\": topic,\t        \"sample\": sample,\t        \"ymd\": $aa.ymd,\t        \"sequence\": $index+1,\t        \"range\": ($a+1) & \"-\" & ($b+1),\t        \"from\": $aa.from,\t        \"upto\":  $bb.upto,\t        \"date\": $aa.date,\t        \"timefrom\": $aa.timefrom,\t        \"timeupto\": $bb.timeupto,\t        \"localfrom\": $aa.localfrom,\t        \"localupto\": $bb.localupto,\t        \"isofrom\": $aa.isofrom,\t        \"isoupto\": $bb.isoupto,\t        \"periods\": $count,\t        \"duration\": $count*30,\t        \"average\": $round(($sum(payload[[$a..$b]].value)/$count)*1000)/1000,\t        \"DSTchange\": $substring($aa.localfrom,-3) != $substring($bb.localfrom,-3)\t        })\t    });\t    $array^(from)[];\t)\t\t/* (>duration) gets longest periods first, however (from) sorts           */\t/* chronologically, which is required for correct display on tariff graph */\t/* final [] places result into an array even if only one sequence group   */","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":180,"y":740,"wires":[["115ae37f9df88633"]]},{"id":"115ae37f9df88633","type":"join","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Join","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":310,"y":740,"wires":[["0b2baaea3d361864"]]},{"id":"9f49cf24a9de3b53","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Save PERIODS","rules":[{"t":"set","p":"OctAgilePeriod","pt":"flow","to":"payload","tot":"msg","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":720,"wires":[[]]},{"id":"0b2baaea3d361864","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Table","rules":[{"t":"set","p":"payload.both","pt":"msg","to":"$append(payload.import, payload.export)\t","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":740,"wires":[["70d7bd0a4d244b4c"]]},{"id":"1a455554a27f0b90","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Export High","rules":[{"t":"set","p":"topic","pt":"msg","to":"export","tot":"str"},{"t":"set","p":"sample","pt":"msg","to":"15","tot":"num"},{"t":"set","p":"payload","pt":"msg","to":"/* for export values - as for import but */\t/* sorted from highest to lowest, top <n> */\t\t(\t    $ymd:=$replace(payload[-1].date,\"-\",\"\");\t    $array:=payload[[48..95]]^(>export)[[0..$$.sample-1]];\t    $array:=$array~> |$| {\"value\": export, \"ymd\": $ymd}, [\"import\", \"export\"]|;\t    $array^(from);\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":680,"wires":[["f78827da9d61cc5c"]]},{"id":"8bf35a995b07e7c0","type":"link out","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Binary","mode":"link","links":["315b3d2dda9301bb"],"x":1045,"y":660,"wires":[]},{"id":"70d7bd0a4d244b4c","type":"change","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","name":"Merge","rules":[{"t":"set","p":"period","pt":"msg","to":"OctAgilePeriod","tot":"flow","dc":true},{"t":"set","p":"payload","pt":"msg","to":"(\t/* keep today from context or payload if no context   */\t/* drop any older, then add new tomorrow from payload */     \t\t    $today:=$replace($substringBefore($now(),\"T\"),\"-\",\"\");\t    $next:= payload.import[0].ymd;\t\t    {\"import\": $append(period.import, payload.import)[ymd>=$today][]~>$distinct(),\t     \"export\": $append(period.export, payload.export)[ymd>=$today][]~>$distinct(),\t     \"both\":   $append(period.both, payload.both)[ymd>=$today][]~>$distinct(),\t     \"today\":  $today,\t     \"next\":   $next};\t\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":570,"y":740,"wires":[["9f49cf24a9de3b53","339092c8ec953466"]]},{"id":"5fd6c5257050028c","type":"junction","z":"1e4d07ddcfdc2e9b","g":"518fc65503bdfc82","x":360,"y":660,"wires":[["7b2bfeb83135f71f","1a455554a27f0b90"]]},{"id":"6f8158bd34274dd3","type":"ha-entity-config","d":true,"server":"","deviceConfig":"","name":"SC Oct Agile Seq","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Octopus Agile Sequence Table"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":true,"debugEnabled":false}]